@import (less) 'config/config';
@import (less) 'reset/reset';

@import (less) 'functions/colors';
@import (less) 'functions/helpers';

@import (less) 'layout/shell';
@import (less) 'layout/flex';
@import (less) 'layout/columns';

@import (less) 'boxes/border';
@import (less) 'boxes/gradient';

@import (less) 'components/buttons';
@import (less) 'components/forms';
@import (less) 'components/image';
@import (less) 'components/paper';
@import (less) 'components/shadow';
@import (less) 'components/tooltip';

@import (less) 'composite/filter';
@import (less) 'composite/transform';
@import (less) 'composite/animations';

@import (less) 'typography/forms';
@import (less) 'typography/typography';
@import (less) 'typography/headings';
@import (less) 'typography/paragraphs';
@import (less) 'typography/code';
@import (less) 'typography/inline';
@import (less) 'typography/blockquote';
@import (less) 'typography/lists';
@import (less) 'typography/links';
@import (less) 'typography/table';

@import (less) 'paint/colors-operations';
@import (less) 'paint/colors-functions';
@import (less) 'paint/colors';
@import (less) 'paint/visibility';


.column(@number, @width: false, @gap : false, @rules : false, @rulesoptions : null) {
	.column-count(@number);

	& when (isnumber(@width)) {
		column-width: @width;
	}

	& when (isnumber(@gap)) {
		column-gap: @gap;
	}

	& when(@rules) {
		column-rules: @rulesoptions;
	}
}
