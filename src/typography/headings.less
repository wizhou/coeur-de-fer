each(range(4), {
  /* Get the font size ratio by multiplying the base font size by the chosen ratio. */
  @base-font-size: @typography[base-font-size];
  @type-ratio: @type-ratios[perfectFourth];
  @ratio: @base-font-size * @type-ratio;

  /* Reversing the range by construction with the function 洧녭(洧논)=洧논+洧녽-洧논, where 洧녽 is the reverse of 洧논 inside the range. Alas : @reverse = (@min + @max) - @value */
  @min: min(range(4));
  @max: max(range(4));
  @reverse-value: (@min + @max) - @value;

  /* Raise the font ratio to the value of the reversed range. */
  @level-size: pow(@ratio, @reverse-value);

  .h@{value},
  h@{value} {
    font-size: @level-size;
  }

  /* Set headings font size. */
  h@{value} {
    line-height: @typography[base-line-height];
    margin-bottom: @typography[base-margin];
  };

});

h5,
h6 {
  line-height: @typography[base-line-height];
  margin-bottom: @typography[base-margin];
}

each(range(6), {
  h@{value} {
    margin-top: @typography[base-margin];
    font-weight: bold;
  }
});

.headings {

  &-unmarged {
    margin-top: 0em;
    margin-bottom: 0em;
  }

  &-unmarged-top {
    margin-top: 0em;
  }

  &-unmarged-bottom {
    margin-bottom: 0em;
  }
}

/* Reference :
- https://moderncss.dev/generating-font-size-css-rules-and-creating-a-fluid-type-scale/
 */
