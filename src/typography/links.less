a,
.link {
  display: inline;
  border-bottom-width: 1px;
  border-bottom-style: solid;
  border-bottom-color: @colors[@light][text];
  color: @colors[@light][text];
  transition: color 0.3s ease, border-color 0.3s ease;

  &-inline-block {
    display: inline-block;
  }

  @media screen and (prefers-color-scheme: dark) {
    border-bottom-color: @colors[@dark][text];
    color: @colors[@dark][text];
  }

  .link-states(@color) {
    &:hover,
    &-hover {
      color: @color;
      border-bottom-color: @color;
    }

    &:active,
    &-active {
      color: lighten(@color, 20%);
      border-bottom-color: lighten(@color, 20%);
    }

    &:focus,
    &-focus {
      color: lighten(@color, 10%);
      border-bottom-color: lighten(@color, 10%);
    }
  }

  .link-states(@colors[@light][textOffset]);

  &-secondary {
    .link-states(@colors[@light][secondary]);
  }

  &:disabled,
  &-disabled {
    color: fade(@colors[@light][text], 45%) !important;
    border-color: fade(@colors[@light][text], 33%) !important;
    cursor: default;
    pointer-events: none;

    @media screen and (prefers-color-scheme: dark) {
      color: fade(@colors[@dark][text], 45%) !important;
      border-color: fade(@colors[@dark][text], 33%) !important;
    }
  }

  /* A cleaner looking link. */

  &-clean {
    border-color: @colors[@light][background];
    color: fade(@colors[@light][text], 70%);

    @media screen and (prefers-color-scheme: dark) {
      border-color: @colors[@dark][background];
      color: fade(@colors[@dark][text], 70%);
    }

    &:hover {
      border-color: fade(@colors[@light][text], 70%);
      color: fade(@colors[@light][text], 70%);

      @media screen and (prefers-color-scheme: dark) {
        border-color: fade(@colors[@dark][text], 70%);
        color: fade(@colors[@dark][text], 70%);
      }
    }
  }

  /* Remove link border */

  &-unbordered {
    border-bottom: 0px;

    &:hover {
      border-bottom: 0px;
    }
  }
}
